description = 'Fili: Core Libraries'

configurations {
    avroGeneration
    testArtifacts
}

dependencies {
    compile project(':fili-system-config')
    def druidVersion = '0.3.8'
    compile "io.druid:druid-api:$druidVersion"

    def dropwizardVersion = '3.2.2'
    compile "io.dropwizard.metrics:metrics-core:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-annotation:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-healthchecks:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-servlet:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-jersey2:$dropwizardVersion"
    compile ("io.dropwizard.metrics:metrics-logback:$dropwizardVersion") {
        exclude(module: 'logback-classic')
    }

    compile "javax.servlet:javax.servlet-api:3.1.0"
    def jerseyVersion = '2.24'
    compile "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
    compile "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
    compile "javax.annotation:javax.annotation-api:1.3"
    compile "javax.inject:javax.inject:1"
    def hk2Version = '2.5.0-b36'
    compile "org.glassfish.hk2:hk2-api:$hk2Version"
    compile "org.glassfish.hk2.external:javax.inject:$hk2Version"

    def jacksonVersion = '2.6.2'
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:$jacksonVersion"

    compile "redis.clients:jedis:2.9.0"
    compile "org.redisson:redisson:3.1.0"
    compile "joda-time:joda-time:2.9.6"
    compile "org.asynchttpclient:async-http-client:2.0.24"
    compile "io.reactivex:rxjava:1.2.2"
    compile "net.spy:spymemcached:2.12.1"
    def luceneVersion = '6.6.0'
    compile "org.apache.lucene:lucene-core:$luceneVersion"
    compile "org.apache.lucene:lucene-analyzers-common:$luceneVersion"
    compile "org.apache.lucene:lucene-queries:$luceneVersion"
    compile "org.apache.lucene:lucene-backward-codecs:$luceneVersion"
    compile "com.google.guava:guava:21.0"
    compile "org.apache.commons:commons-lang3:3.5"
    compile "org.apache.commons:commons-collections4:4.1"
    compile "org.apache.avro:avro:1.8.1"

    avroGeneration "org.apache.avro:avro-tools:1.7.1"

    testCompile "junit:junit:4.12"
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.24"
}

task runAvroGeneragion(type: JavaExec) {
    classpath configurations.avroGeneration

    main = 'org.apache.avro.tool.Main'

    def inputSchema = "$projectDir/src/test/resources/avroFilesTesting/sampleData.avsc"
    def inputData = "$projectDir/src/test/resources/avroFilesTesting/sampleData.json"
    def redirectDir = "$buildDir/avro/avroFilesTesting"
    def redirect = new File("$redirectDir/sampleData.avro")
    ant.delete(file:redirect.absolutePath)
    ant.touch(file:redirect.absolutePath, mkdirs: true)
    standardOutput = redirect.newOutputStream()
    args = ['fromjson', '--schema-file', inputSchema, inputData]
}

compileGroovy.dependsOn runAvroGeneragion

task packageTests(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}

artifacts {
    testArtifacts packageTests
}
